% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solutionTree.R
\name{treeGrowth}
\alias{treeGrowth}
\title{Monitor the Growth of the Solution Tree with Respect to the Threshold}
\usage{
treeGrowth(
  graph,
  reds,
  blues = !reds,
  threshold = 1,
  bound = 2000,
  stepmode = "strict"
)
}
\arguments{
\item{graph}{A named list of character vectors. Each of these vectors 
should have the name of one alteration, and contain the vector of the 
names of the samples affected by this alteration. Such a list can be 
obtained from a logical matrix using \code{\link{matrix2graph}}}

\item{reds}{A named logical vector whose names are the samples' names. The
values are \code{TRUE} for red samples, i.e. those which our solutions
should affect.}

\item{blues}{A similar vector specifying the blue samples, those that our
solutions should not affect. It is forbidden for a sample to be red and blue
at the same time !}

\item{threshold}{The maximum step-score for creating new solutions (see
details about the step-score in \link{musette-algorithm}).}

\item{bound}{The program will stop generating new solutions when this number
of solutions is reached. Note : if there are many \dQuote{equally good}
solutions they are added at the same time, possibly exceeding this
\code{bound}, then the algorithm stops.}

\item{stepmode}{A string to set how the step-score is calculated. Valid values
are \code{"original"}, \code{"unique"}, \code{"bestFirst"}, \code{"strict"}.}
}
\value{
A dataframe with 3 columns showing the evolution of the threshold,
the number of nodes and the number of leaf nodes, during the growth of the
solution tree. Its study can give an insight as to what could be a good
threshold value to use.
}
\description{
Grow the solution tree completely, only to see how its size evolves
in relation to the threshold used.
}
\details{
See \link{musette-algorithm} to learn about the algorithms and the its parameters.
}
\examples{
#Toy example
toy.matrix <- matrix(c(1,0,1,0,0,0,1,1,0,0,1,0,0,0,1,1,0,1,0,1,0,0,0,1),4,6,byrow=TRUE)
rownames(toy.matrix) <- LETTERS[1:4]
colnames(toy.matrix) <- letters[1:6]
toy.graph <- matrix2graph(toy.matrix)
reds <- c(rep(TRUE,3),rep(FALSE,3))
names(reds) <- colnames(toy.matrix)
treeGrowth(toy.graph,reds)

#Real bladder data, restricted on the 100 first solution sets including only mutations
data("tcga_bladder",package="musette")   
reds= (groups == 'basal')
names(reds)=names(groups)
graph.muta <- matrix2graph(matrices$muta)
tg <- treeGrowth(graph.muta,reds,bound=100)

}
