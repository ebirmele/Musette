% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solutionTree.R
\name{solutions}
\alias{solutions}
\title{Enumerate Sets of Alterations Specific to a Given Group of Samples}
\usage{
solutions(
  graph,
  reds,
  blues = !reds,
  threshold = 1,
  bound = 2000,
  stepmode = "strict"
)
}
\arguments{
\item{graph}{A named list of character vectors. Each of these vectors 
should have the name of one alteration, and contain the vector of the 
names of the samples affected by this alteration. Such a list can be 
obtained from a logical matrix using \code{\link{matrix2graph}}}

\item{reds}{A named logical vector whose names are the samples' names. The
values are \code{TRUE} for red samples, i.e. those which our solutions
should affect.}

\item{blues}{A similar vector specifying the blue samples, those that our
solutions should not affect. It is forbidden for a sample to be red and blue
at the same time !}

\item{threshold}{The maximum step-score for creating new solutions (see
details about the step-score in \link{musette-algorithm}).}

\item{bound}{The program will stop generating new solutions when this number
of solutions is reached. Note : if there are many \dQuote{equally good}
solutions they are added at the same time, possibly exceeding this
\code{bound}, then the algorithm stops.}

\item{stepmode}{A string to set how the step-score is calculated. Valid values
are \code{"original"}, \code{"unique"}, \code{"bestFirst"}, \code{"strict"}.}
}
\value{
A data.frame with a row for each generated solution, in order of
decreasing score.
Columns include :
\itemize{
\item alterations of each solution (a character vector)
\item size : the number of alterations
\item number of red samples hit
\item number of blue samples hit
\item sensitivity
\item specificity
\item total number of red samples
\item total number of blue samples
\item step-score of adding the last element of this solution
\item threshold : maximum step-score of all the steps in constructing this 
solution
\item leaf : TRUE indicates that this solution has not been extended into a larger solution; FALSE indicates that the dataframe contains at least an extended solution.
\item children-threshold : minimum step-score of extending this solution into
 a new solution
\item parent : row number of the solution that was extended into this one
\item score : score of this solution.
}
}
\description{
See \link{musette-algorithm} for a detailed explanation 
of what is meant by \dQuote{linked}, and the algorithm used.
}
\details{
Two halting criteria are used : \code{bound} and \code{threshold}. Their
default values are high enough, so providing a sensible value for only one
of them effectively results in ignoring the other.
}
\examples{
#Toy example
toy.matrix <- matrix(c(1,0,1,0,0,0,1,1,0,0,1,0,0,0,1,1,0,1,0,1,0,0,0,1),4,6,byrow=TRUE)
rownames(toy.matrix) <- LETTERS[1:4]
colnames(toy.matrix) <- letters[1:6]
toy.graph <- matrix2graph(toy.matrix)
reds <- c(rep(TRUE,3),rep(FALSE,3))
names(reds) <- colnames(toy.matrix)
sol <- solutions(toy.graph,reds)
View(sol)

#Real bladder data, restricted on the 100 first solution sets including only mutations
data("tcga_bladder",package="musette")   
reds= (groups == 'basal')
names(reds)=names(groups)
graph.muta <- matrix2graph(matrices$muta)
sol <- solutions(graph.muta,reds,bound=100)
View(sol)

}
