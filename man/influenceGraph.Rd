% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotfunction.R
\name{influenceGraph}
\alias{influenceGraph}
\title{Visualize the Influence of Alterations and Pairs of Alterations in the Top Solutions}
\usage{
influenceGraph(
  data,
  nb,
  do.musette.object = FALSE,
  leafs.only = TRUE,
  nodemaxsize = 50,
  edgemaxwidth = 30,
  main = "Influence graph"
)
}
\arguments{
\item{data}{A  dataframe generated using \link{solutions} or \link{do.musette}}

\item{nb}{The number of top solutions to consider}

\item{do.musette.object}{Has the dataframe been generated by do.musette?}

\item{leafs.only}{Should oly leaf solutions be considered, that is solutions having no extension in the dataframe}

\item{nodemaxsize, edgemaxwidth}{Graphic parameters}

\item{main}{Title of the plot}
}
\value{
An object that can be plotted by the \link{visIgraph} function. Note: this visualisation tools allows to move nodes interactively for a better inspection of the graph.
}
\description{
Given a solution dataframe generated by \link{solutions} or \link{do.musette}, plot
a graph which nodes are the alterations present in a given number of top solutions.
The size of each node is proportional to the sum of the scores of the 
top solutions containing the correspondant alterations. 
An edge means that two alterations are both contained in some top solution,
its width beeing proportional to the sum of the score of the solutions they
both belong to.
}
\examples{
#Toy example
toy.matrix <- matrix(c(1,0,1,0,0,0,1,1,0,0,1,0,0,0,1,1,0,1,0,1,0,0,0,1),4,6,byrow=TRUE)
rownames(toy.matrix) <- LETTERS[1:4]
colnames(toy.matrix) <- letters[1:6]
toy.graph <- matrix2graph(toy.matrix)
reds <- c(rep(TRUE,3),rep(FALSE,3))
names(reds) <- colnames(toy.matrix)
sol <- solutions(toy.graph,reds)
g <- influenceGraph(sol,8,leafs.only=FALSE)
visIgraph(g)

#Real bladder data, restricted on the 20 first solution sets including only mutations
data("tcga_bladder",package="musette")   
reds= (groups == 'basal')
names(reds)=names(groups)
graph.muta <- matrix2graph(matrices$muta)
sol <- solutions(graph.muta,reds,bound=100)
g <- influenceGraph(sol,nb=20)
visIgraph(g)

#use with do.musette output including mutations, amplifications and deletions
cf vignette

}
